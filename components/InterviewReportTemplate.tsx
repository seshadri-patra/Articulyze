// components/InterviewReportTemplate.tsx
"use client";

import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";

interface EmotionAnalysis {
  emotion: string;
  percentage: string;
}

interface GazeAnalysis {
  direction: string;
  percentage: string;
}

interface TTRAnalysis {
  ttr: number;
  unique_words: number;
  diversity_level: string;
  emoji: string;
}

interface LogicalFlowAnalysis {
  score: number;
  emoji: string;
}

interface RecordingAnalysis {
  emotions: EmotionAnalysis[];
  gaze: GazeAnalysis[];
  duration: number;
}

interface Analysis {
  total_words: number;
  filler_count: number;
  filler_percentage: number;
  found_fillers: string[];
  filler_emoji: string;
  ttr_analysis: TTRAnalysis;
  logical_flow: LogicalFlowAnalysis;
}

export default function InterviewReportTemplate({
  analysis,
  recordingAnalysis,
  transcription,
}: {
  analysis: Analysis;
  recordingAnalysis: RecordingAnalysis;
  transcription: string;
}) {
  return (
    <div className="p-6 print:p-10 max-w-3xl mx-auto text-black bg-white">
      <h1 className="text-3xl font-bold mb-6 text-center">Interview Practice Report</h1>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="text-xl">üîç Summary</CardTitle>
        </CardHeader>
        <CardContent className="space-y-2 text-sm">
          <p><strong>Total Words:</strong> {analysis.total_words}</p>
          <p><strong>Filler Words:</strong> {analysis.filler_count} ({analysis.filler_percentage}%)</p>
          <p><strong>Vocabulary Diversity:</strong> {analysis.ttr_analysis.diversity_level} ({analysis.ttr_analysis.ttr.toFixed(2)})</p>
          <p><strong>Logical Flow:</strong> {analysis.logical_flow.score}%</p>
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="text-xl">üòä Emotions Detected</CardTitle>
        </CardHeader>
        <CardContent>
          {recordingAnalysis.emotions.map((e) => (
            <div key={e.emotion} className="flex justify-between text-sm py-1 border-b">
              <span className="capitalize">{e.emotion}</span>
              <span>{e.percentage}%</span>
            </div>
          ))}
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="text-xl">üëÄ Gaze Direction</CardTitle>
        </CardHeader>
        <CardContent>
          {recordingAnalysis.gaze.map((g) => (
            <div key={g.direction} className="flex justify-between text-sm py-1 border-b">
              <span className="capitalize">{g.direction}</span>
              <span>{g.percentage}%</span>
            </div>
          ))}
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="text-xl">üìÑ Transcription</CardTitle>
        </CardHeader>
        <CardContent>
          <p className="whitespace-pre-wrap text-sm leading-relaxed">
            {transcription}
          </p>
        </CardContent>
      </Card>

      <p className="text-xs text-center text-gray-500 pt-6">
        Report generated by Articulyze
      </p>
    </div>
  );
}
